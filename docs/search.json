[{"path":"https://nick-2003.github.io/package20250424/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 package20250424 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://nick-2003.github.io/package20250424/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://nick-2003.github.io/package20250424/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). package20250424: Package (One Line, Title Case). R package version 0.0.0.9000, https://nick-2003.github.io/package20250424/.","code":"@Manual{,   title = {package20250424: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://nick-2003.github.io/package20250424/}, }"},{"path":"https://nick-2003.github.io/package20250424/index.html","id":"package20250424","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal package20250424 …","code":""},{"path":"https://nick-2003.github.io/package20250424/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version package20250424 GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Nick-2003/package20250424\")"},{"path":"https://nick-2003.github.io/package20250424/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(package20250424) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://nick-2003.github.io/package20250424/reference/is_leap.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a year is a leap year — is_leap","title":"Check if a year is a leap year — is_leap","text":"Check year leap year","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/is_leap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a year is a leap year — is_leap","text":"","code":"is_leap(year)"},{"path":"https://nick-2003.github.io/package20250424/reference/is_leap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a year is a leap year — is_leap","text":"year Year provided","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/is_leap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a year is a leap year — is_leap","text":"Boolean TRUE FALSE","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/is_leap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a year is a leap year — is_leap","text":"","code":"is_leap(2000) #> [1] TRUE"},{"path":"https://nick-2003.github.io/package20250424/reference/str_split_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a string based on given pattern, with n maximum number of places — str_split_one","title":"Split a string based on given pattern, with n maximum number of places — str_split_one","text":"Split string based given pattern, n maximum number places","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/str_split_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a string based on given pattern, with n maximum number of places — str_split_one","text":"","code":"str_split_one(string, pattern, n = Inf)"},{"path":"https://nick-2003.github.io/package20250424/reference/str_split_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a string based on given pattern, with n maximum number of places — str_split_one","text":"string character vector , , one element. pattern Pattern look . default interpretation regular expression, described vignette(\"regular-expressions\"). Use regex() finer control matching behaviour. Match fixed string (.e. comparing bytes), using fixed(). fast, approximate. Generally, matching human text, want coll() respects character matching rules specified locale. Match character, word, line sentence boundaries boundary(). empty pattern, \"\", equivalent boundary(\"character\"). n Maximum number pieces return. Default (Inf) uses possible split positions. str_split(), determines maximum length element output. str_split_fixed(), determines number columns output; input short, result padded \"\".","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/str_split_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a string based on given pattern, with n maximum number of places — str_split_one","text":"character vector.","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/str_split_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a string based on given pattern, with n maximum number of places — str_split_one","text":"","code":"x <- \"alfa,bravo,charlie,delta\" str_split_one(x, pattern = \",\") #> [1] \"alfa\"    \"bravo\"   \"charlie\" \"delta\"   str_split_one(x, pattern = \",\", n = 2) #> [1] \"alfa\"                \"bravo,charlie,delta\"  y <- \"192.168.0.1\" str_split_one(y, pattern = stringr::fixed(\".\")) #> [1] \"192\" \"168\" \"0\"   \"1\""},{"path":"https://nick-2003.github.io/package20250424/reference/temp_conv.html","id":null,"dir":"Reference","previous_headings":"","what":"Temperature conversion from one scale to another — temp_conv","title":"Temperature conversion from one scale to another — temp_conv","text":"Temperature conversion one scale another","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/temp_conv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temperature conversion from one scale to another — temp_conv","text":"","code":"temp_conv(temp, start_scale, end_scale)"},{"path":"https://nick-2003.github.io/package20250424/reference/temp_conv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temperature conversion from one scale to another — temp_conv","text":"temp Temperature value start_scale Starting temperature scale end_scale Ending temperature scale","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/temp_conv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temperature conversion from one scale to another — temp_conv","text":"Temperature value end scale","code":""},{"path":"https://nick-2003.github.io/package20250424/reference/temp_conv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Temperature conversion from one scale to another — temp_conv","text":"","code":"temp_conv(41, \"F\", \"C\") #> [1] 5"}]
